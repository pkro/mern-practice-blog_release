{"version":3,"sources":["pages/HomePage.js","pages/About.js","components/ArticleList.js","pages/Articles.js","components/CommentList.js","components/UpvoteSection.js","pages/NotFound.js","forms/CommentForm.js","pages/Article.js","layout/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","About","ArticleList","articles","className","map","article","key","name","to","content","substring","Articles","filterBy","headline","useState","setArticles","useEffect","a","fetch","method","response","json","body","filter","e","_id","fetchData","length","defaultProps","CommentList","comments","comment","user","text","UpvoteSection","articleName","upvotes","setArticleInfo","upVote","preventDefault","onClick","NotFound","CommentForm","initialState","formData","setFormData","onSubmit","JSON","stringify","headers","errors","alert","join","onChange","target","value","action","htmlFor","type","id","placeholder","Article","match","params","setArticle","title","paragraph","idx","Navbar","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.90754132.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => {\n  return (\n    <>\n      <h1>Hello</h1>\n      <p>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Sed nostrum\n        fugiat autem quaerat possimus. Quasi inventore ducimus explicabo impedit\n        quam iusto sunt praesentium aut vel neque, accusamus aliquam doloremque\n        amet.\n      </p>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst About = () => {\n  return <div>About</div>;\n};\n\nexport default About;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticleList = ({ articles }) => {\n  return (\n    <div className=\"article-list\">\n      <ul>\n        {articles.map((article) => (\n          <li key={article.name}>\n            <Link to={`/article/${article.name}`}>\n              <h3>{article.name}</h3>\n              <p>{article.content[0].substring(0, 100)}...</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ArticleList;\n","import React, { useEffect, useState } from 'react';\nimport ArticleList from '../components/ArticleList';\n\nconst Articles = ({ filterBy, headline }) => {\n  const [articles, setArticles] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`/api/articles/`, { method: 'GET' });\n      const body = await response.json();\n      if (filterBy !== null)\n        setArticles(body.filter((e) => e._id !== filterBy));\n      else setArticles(body);\n    }\n    fetchData();\n  }, [filterBy]);\n  return (\n    <>\n      <>{headline && <h1>{headline}</h1>}</>\n      {articles.length > 0 && <ArticleList articles={articles} />}\n    </>\n  );\n};\n\nArticles.defaultProps = {\n  filterBy: null,\n  headline: 'List of articles',\n};\n\nexport default Articles;\n","import React from 'react';\n\nconst CommentList = ({ comments }) => {\n  //console.log(comments);\n  return (\n    <div className=\"my-2\">\n      <h3>Comments</h3>\n      {comments.map((comment) => (\n        <div className=\"comment\" key={comment._id}>\n          <h4>{comment.user}</h4>\n          <p>{comment.text}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CommentList;\n","import React from 'react';\n\nconst UpvoteSection = ({ articleName, upvotes, setArticleInfo }) => {\n  const upVote = async (e) => {\n    e.preventDefault();\n    const response = await fetch(`/api/articles/${articleName}/upvote`, {\n      method: 'POST',\n    });\n    const body = await response.json();\n    setArticleInfo(body);\n  };\n  return (\n    <>\n      <div className=\"voting my-1\">\n        {' '}\n        <button className=\"btn\" onClick={upVote}>\n          Upvote\n        </button>\n        This post has been upvoted {upvotes} times\n      </div>\n    </>\n  );\n};\n\nexport default UpvoteSection;\n","import React from 'react';\n\nconst NotFound = () => {\n  return <h1>Not found</h1>;\n};\n\nexport default NotFound;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst CommentForm = ({ articleName, setArticleInfo }) => {\n  const initialState = { text: '', user: '' };\n  const [formData, setFormData] = useState(initialState);\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: 'post',\n      body: JSON.stringify(formData),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const body = await response.json();\n\n    if (body.errors) {\n      alert(body.errors.join('\\n'));\n    } else {\n      setArticleInfo(body);\n      setFormData(initialState);\n    }\n  };\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const { text, user } = formData;\n  return (\n    <div className=\"comment-form my-1\">\n      <div className=\"lead\">Add a comment</div>\n      <div className=\"form\">\n        <form action=\"#\" onSubmit={onSubmit}>\n          <label htmlFor=\"user\">Username (leave blank for anonymous)</label>\n          <input\n            type=\"text\"\n            name=\"user\"\n            id=\"user\"\n            placeholder=\"Username\"\n            value={user}\n            onChange={onChange}\n            className=\"my-1\"\n          />\n          <label htmlFor=\"text\">Comment</label>\n          <textarea\n            value={text}\n            name=\"text\"\n            id=\"text\"\n            onChange={onChange}\n          ></textarea>\n          <button type=\"submit\" className=\"btn my-1\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  articleName: PropTypes.string.isRequired,\n  setArticleInfo: PropTypes.func.isRequired,\n};\nexport default CommentForm;\n","import React, { useEffect, useState } from 'react';\nimport Articles from './Articles';\nimport CommentList from '../components/CommentList';\nimport UpvoteSection from '../components/UpvoteSection';\nimport NotFound from './NotFound';\nimport CommentForm from '../forms/CommentForm';\n\nconst Article = ({ match }) => {\n  const { name } = match.params;\n  const [article, setArticle] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`/api/articles/${name}`, { method: 'GET' });\n      const body = await response.json();\n      setArticle(body);\n    }\n    fetchData();\n  }, [name, article.upvotes]);\n\n  return article.title ? (\n    <>\n      <h1>{article.title}</h1>\n      <div className=\"article\">\n        {article.content.map((paragraph, idx) => (\n          <p key={idx}>{paragraph}</p>\n        ))}\n      </div>\n      <UpvoteSection\n        articleName={article.name}\n        setArticleInfo={setArticle}\n        upvotes={article.upvotes}\n      />\n      <CommentForm articleName={article.name} setArticleInfo={setArticle} />\n      {article.comments && <CommentList comments={article.comments} />}\n      <Articles headline=\"Related articles\" filterBy={article._id} />\n    </>\n  ) : (\n    <NotFound />\n  );\n};\n\nexport default Article;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"logo\">MYBLOG</div>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/articles\">Articles</Link>\n        </li>\n        <li>\n          <Link to=\"/About\">About</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './scss/App.scss';\nimport HomePage from './pages/HomePage';\nimport About from './pages/About';\nimport Article from './pages/Article';\nimport Articles from './pages/Articles';\nimport Navbar from './layout/Navbar';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <div className=\"app\">\n        <div id=\"page-body\">\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/about\" component={About} />\n            <Route path=\"/articles\" component={Articles} />\n            <Route path=\"/article/:name\" component={Article} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}